import logging
from typing import Union
from fastapi import FastAPI
from transformers import pipeline
from pydantic import BaseModel

# Create app and load summarizer
app = FastAPI()
app.summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

class SummaryRequest(BaseModel):
    '''
    Model for the POST request at the summary endpoint. 

    Attributes:
        text (str): Text to summarize. 
        summary_length (int): Maximum allowable length of the summary.
    '''
    text: str
    summary_length: int

@app.post("/summary")
def summarize(summary: SummaryRequest):
    '''
    API endpoint that provides summary for a given POST request. 
    The summary is built with the facebook/bart-large-cnn model from Hugging Face.

    Args:
        summary (SummaryRequest): JSON payload that matches SummaryRequest schema.
            Requires fields text (str) and summary_length (int).

    Returns:
        json (dict): Return a json with the summary generated by the model.
    '''
    # Check inputs
    if summary.summary_length < 10:
        return {'error': 'Expected summary_length >= 10'}

    if summary.text=='':
        return {'summary': ''}
    
    summary = app.summarizer(
        summary.text, 
        max_length=summary.summary_length, 
        min_length=summary.summary_length - 10,   #  Setting restrain on min to get roughly requested size
        do_sample=False
    )
    summary = summary[0]['summary_text']

    return {'summary': summary}
